<?xml version="1.0" ?> 
<project name="FashionAde" default="build" xmlns="http://nant.sf.net/release/0.91-alpha1/nant.xsd">      
	<property name="nant.settings.currentframework" value="net-3.5" />
  <property name="build.tools" value="${string::to-lower(environment::get-variable('BUILD_TOOLS'))}" />
  <property name="project.config" value="release" />

  <!-- Version -->
  <property name="version" value="1.0.17.7"/>
  <if test="${property::exists('CCNetLabel')}">
    <property name="version" value="${CCNetLabel}"/>
  </if>
  
  <property name="project.fullversion" value="${version}" dynamic="true" />
  <property name="project.clearversion" value="${string::replace(version, '.','_')}" dynamic="true" />

  <property name="company.name" value="Abundant Closet LLC" />
  <property name="solution.name" value="Fashion Ade"/>

  <property name="db.server" value="dbserver"/>
  <property name="db.name" value="fashionade_qa"/>
  <property name="db.user" value="root"/>
  <property name="db.password" value="obelisco"/>
  <property name="database.qa" value="Server=${db.server};Database=${db.name};User ID=${db.user};Password=${db.password};Allow Batch=true;Default Command Timeout=120;"/>

  <property name="dir.lib" value="lib" />
  <property name="dir.solution" value="."/>
  <property name="dir.web" value="${dir.solution}\app\FashionAde.Web"/>
  <property name="dir.webadmin" value="${dir.solution}\FashionAde.WebAdmin"/>
  <property name="dir.hostservice" value="${dir.solution}\app\FashionAde.ServiceHost"/>
  <property name="dir.test" value="${dir.solution}\tests\FashionAde.Tests"/>
  <property name="dir.scripts" value="${dir.solution}\db\Scripts"/>
  <property name="dir.updaterexecutor" value="${dir.solution}\app\FashionAde.OutfitUpdaterExecutor\bin\${project.config}"/>

  <property name="publish.dir" value="${dir.solution}\deploy2"/>
  <property name="publish.web" value="${publish.dir}\web"/>
  <property name="publish.webadmin" value="${publish.dir}\webadmin"/>
  <property name="publish.hostservice" value="${publish.dir}\hostservice"/>
  <property name="publish.scripts" value="${publish.dir}\scripts"/>
  <property name="publish.updaterexecutor" value="${publish.dir}\updaterexecutor"/>

  <property name="deploy.dir" value="\\fileserver\Deploy\Automated\FashionAde"/>

  <property name="qa.dir" value="\\wsv01\Projects\QA\Fashion Ade"/>
  <property name="qa.web" value="${qa.dir}\WebSite"/>
  <property name="qa.webadmin" value="${qa.dir}\AdminSite"/>
  <property name="qa.hostservice" value="${qa.dir}\HostService"/>
  <property name="qa.updaterexecutor" value="${qa.dir}\UpdaterExecutor"/>

  <target name="move-to-qa">
    <call target="version" />
    <call target="compile" />
    <call target="update-db" />
    <call target="copyfolders" />
    <call target="rename-to-qa" />
    <call target="copy-to-qa" />
    <call target="zip" />

    <call target="copyfolders" force="true" />
    <call target="rename-to-prd" />
    <call target="zip-to-prd" />
  </target>

  <target name="version" description="Generate AssemblyInfo">
    <echo message="Marking build with version ${project.fullversion}" />

    <delete file="${dir.solution}\CommonAssemblyInfo.cs" failonerror="false"/>

    <asminfo output="${dir.solution}\CommonAssemblyInfo.cs" language="CSharp">
      <imports>
        <import namespace="System" />
        <import namespace="System.Reflection" />
      </imports>
      <attributes>
        <attribute type="AssemblyInformationalVersionAttribute" value="${version}" />
        <attribute type="AssemblyFileVersionAttribute" value="${version}" />
        <attribute type="AssemblyVersionAttribute" value="${version}" />
        <attribute type="AssemblyCopyrightAttribute" value="Copyright (c) 2010, ${company.name}"/>
        <attribute type="AssemblyCompanyAttribute" value="${company.name}" />
        <attribute type="AssemblyTrademarkAttribute" value="Trademark by ${company.name}" />
        <attribute type="AssemblyConfigurationAttribute" value="release" />
      </attributes>
    </asminfo>

  </target>

  <target name="compile" description="Compile the complete solution">
    <delete dir="${publish.dir}" includeemptydirs="true" />
    <mkdir dir="${publish.dir}" />
    <mkdir dir="${publish.dir}\bin" />
    <mkdir dir="${publish.web}"/>
    <mkdir dir="${publish.webadmin}"/>
    <mkdir dir="${publish.hostservice}"/>

    <msbuild project="${dir.solution}\FashionAde.sln" target="Rebuild" verbosity="Minimal">
      <property name="Configuration" value="${project.config}" />
      <arg value="/nologo"/>
    </msbuild>
  </target>
  
  <target name="copyfolders" description="Create the deployed folders">

    <msbuild project="${dir.solution}\app\FashionAde.Web\FashionAde.Web.csproj" verbosity="Minimal">
      <property name="configuration" value="${project.config}" />
      <property name="outdir" value="..\..\deploy2\bin\\" />
      <property name="webprojectoutputdir" value="..\..\deploy2\web\\" />
    </msbuild>

    <msbuild project="${dir.solution}\FashionAde.WebAdmin\FashionAde.WebAdmin.csproj" verbosity="Minimal">
      <property name="configuration" value="${project.config}" />
      <property name="outdir" value="..\deploy2\bin\\" />
      <property name="webprojectoutputdir" value="..\deploy2\webadmin\\" />
    </msbuild>

    <copy todir="${publish.scripts}" includeemptydirs="false">
      <fileset basedir="${dir.scripts}">
        <include name="**/*.sql"/>
      </fileset>
    </copy>

    <copy todir="${publish.hostservice}" includeemptydirs="false">
      <fileset basedir="${dir.hostservice}\bin\${project.config}">
        <exclude name="**/*.cs"/>
        <exclude name="**/*.pdb"/>
        <exclude name="**/*.csproj*"/>
        <exclude name="**/obj/**"/>
        <include name="**/*.*"/>
      </fileset>
    </copy>

    <copy todir="${publish.updaterexecutor}" includeemptydirs="false">
      <fileset basedir="${dir.updaterexecutor}">
        <exclude name="**/*.cs"/>
        <exclude name="**/*.pdb"/>
        <exclude name="**/*.csproj*"/>
        <exclude name="**/obj/**"/>
        <include name="**/*.*"/>
      </fileset>
    </copy>

    <foreach item="File" property="filename">
      <in>
        <items>
          <include name="${publish.web}\**\all.css" />
          <include name="${publish.web}\**\js\*.js" />
        </items>
      </in>
      <do>
        <call target="javascript.minify" />

        <property name="source.file" value="${path::get-file-name-without-extension(filename)}${string::to-lower(path::get-extension(filename))}"/>
        <property name="dest.file" value="${path::get-file-name-without-extension(filename)}${project.clearversion}${string::to-lower(path::get-extension(filename))}"/>
        <property name="dest.filename" value="${path::get-directory-name(filename)}\${dest.file}"/>

        <move file="${filename}" tofile="${dest.filename}" overwrite="true" />
        <delete file="${filename}" />

        <replace token="${source.file}" value="${dest.file}">
          <fileset basedir="${publish.web}">
            <include name="**/*.css"/>
            <include name="**/js/*.js"/>
            <include name="**/*.aspx"/>
            <include name="**/*.html"/>
            <include name="**/*.ascx"/>
            <include name="**/*.Master"/>
          </fileset>
        </replace>

      </do>
    </foreach>
  </target>

  <target name="rename-to-qa">

    <move file="${publish.hostservice}\NHibernate.QA.config"
      tofile="${publish.hostservice}\NHibernate.config" overwrite="true" />

    <move file="${publish.web}\NHibernate.QA.config"
      tofile="${publish.web}\NHibernate.config" overwrite="true" />

    <move file="${publish.webadmin}\NHibernate.QA.config"
      tofile="${publish.webadmin}\NHibernate.config" overwrite="true" />

    <move file="${publish.hostservice}\App.QA.config"
      tofile="${publish.hostservice}\FashionAde.ServiceHost.exe.config" overwrite="true" />

    <move file="${publish.web}\Web.QA.config"
      tofile="${publish.web}\Web.config" overwrite="true" />

    <move file="${publish.webadmin}\Web.QA.config"
      tofile="${publish.webadmin}\Web.config" overwrite="true" />

    <replace token="/static/" value="//static.fade.app.nybblenetwork.com/">
      <fileset basedir="${publish.web}">
        <include name="**/*.css"/>
        <include name="**/js/*.js" />
        <include name="**/*.aspx"/>
        <include name="**/*.html"/>
        <include name="**/*.htm"/>
        <include name="**/*.ascx"/>
        <include name="**/*.master"/>
      </fileset>
    </replace>

  </target>

  <target name="zip">
    <zip zipfile="${deploy.dir}\QA_${project::get-name()}-${project.config}-${project.fullversion}.zip">
      <fileset basedir="${publish.dir}">
        <include name="**/*.*"/>
      </fileset>
    </zip>
  </target>

  <target name="update-db">
    <echo message="Database updater folder: ${build.tools}\mysqldbupdater\DbUpdater.exe" />

    <exec program="${build.tools}\mysqldbupdater\DbUpdater.exe">
      <arg value="${dir.solution}\db\Scripts" />
      <arg value="/server:${db.server}"  />
      <arg value="/db:${db.name}"  />
      <arg value="/confirm:false"  />
      <arg value="/user:${db.user}"  />
      <arg value="/password:${db.password}" />
    </exec>

  </target>

  <target name="copy-to-qa">

    <exec program="sc"
      commandline='\\wsv01 stop "Fashion Ade Outfit Engine"'
      workingdir="." />

    <delete includeemptydirs="true">
      <fileset basedir="${qa.web}">
        <exclude name="**/Garments/**"/>
        <include name="**/*.*"/>
      </fileset>
    </delete>

    <delete includeemptydirs="true">
      <fileset basedir="${qa.webadmin}">
        <include name="**/*.*"/>
      </fileset>
    </delete>

    <delete includeemptydirs="true">
      <fileset basedir="${qa.updaterexecutor}">
        <include name="**/*.*"/>
      </fileset>
    </delete>

    <copy todir="${qa.webadmin}" includeemptydirs="false">
      <fileset basedir="${publish.webadmin}">
        <include name="**/*.*"/>
      </fileset>
    </copy>

    <copy todir="${qa.web}" includeemptydirs="false">
      <fileset basedir="${publish.web}">
        <include name="**/*.*"/>
      </fileset>
    </copy>

    <copy todir="${qa.updaterexecutor}" includeemptydirs="false">
      <fileset basedir="${publish.updaterexecutor}">
        <include name="**/*.*"/>
      </fileset>
    </copy>

    <delete includeemptydirs="true">
      <fileset basedir="${qa.hostservice}">
        <include name="**/*.*"/>
      </fileset>
    </delete>

    <copy todir="${qa.hostservice}" includeemptydirs="false">
      <fileset basedir="${publish.hostservice}">
        <include name="**/*.*"/>
      </fileset>
    </copy>

    <exec program="sc"
      commandline='\\wsv01 start "Fashion Ade Outfit Engine"'
      workingdir="." />
  </target>

  <target name="rename-to-prd">
    <move file="${publish.web}\Web.config" tofile="${publish.web}\Release${project.fullversion}.config" overwrite="true" />
    <move file="${publish.webadmin}\Web.config" tofile="${publish.webadmin}\Release${project.fullversion}.config" overwrite="true" />
    <move file="${publish.hostservice}\FashionAde.ServiceHost.exe.config" tofile="${publish.hostservice}\Release${project.fullversion}.config" overwrite="true" />
    <delete file="${publish.web}\Web.config" />
    <delete file="${publish.webadmin}\Web.config" />
    <delete file="${publish.hostservice}\FashionAde.ServiceHost.exe.config" />

    <replace token="/static/" value="//static.fashion-ade.com/">
      <fileset basedir="${publish.web}">
        <include name="**/*.css"/>
        <include name="**/js/*.js" />
        <include name="**/*.aspx"/>
        <include name="**/*.html"/>
        <include name="**/*.htm"/>
        <include name="**/*.ascx"/>
        <include name="**/*.master"/>
      </fileset>
    </replace>

    <replace token="`root`@`%`" value="`root`@`localhost`">
      <fileset basedir="${publish.scripts}">
        <include name="**/*.sql"/>
      </fileset>
    </replace>

    
  </target>

  <target name="zip-to-prd">
    <zip zipfile="${deploy.dir}\PRD_${project::get-name()}-${project.config}-${project.fullversion}.zip">
      <fileset basedir="${publish.dir}">
        <include name="**/*.*"/>
      </fileset>
    </zip>
  </target>

  <target name="javascript.minify">
    <exec program="java" workingdir="${build.tools}">
      <arg value="-jar" />
      <arg value="yuicompressor-2.4.2.jar" />
      <arg value="--charset" />
      <arg value="utf-8" />
      <arg value="-o" />
      <arg value="${filename}.min" />
      <arg value="${filename}" />
    </exec>
    <move file="${filename}.min" tofile="${filename}" overwrite="true" />
  </target>

  <target name="test" description="Run unit tests">
    <property name="windows-path" value="${string::to-lower(environment::get-variable('PATH'))}"/>
    <property name="nunit-in-path"
        value="${string::contains(windows-path, 'nunit')}"/>
    <echo message="Tests skipped because no NUnit folder was found in the Windows path."
        unless="${nunit-in-path}"/>
    <exec program="nunit-console.exe" if="${nunit-in-path}">
        <arg file="${dir.tests}/FashionAde.Tests.nunit"/>
    </exec>
    <property name="fxcop-in-path"
        value="${string::contains(windows-path, 'fxcop')}"/>
    <echo message="FxCop skipped because no FxCop folder was found in the Windows path."
        unless="${fxcop-in-path}"/>
    <fxcop projectFile="${dir.solution}/FashionAde.fxcop" directOutputToConsole="true" 
        failOnAnalysisError="true" if="${fxcop-in-path}"/>
  </target>

</project>
