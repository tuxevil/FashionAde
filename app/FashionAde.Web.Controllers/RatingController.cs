using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Web.Mvc;
using FashionAde.Core;
using FashionAde.Core.Accounts;
using FashionAde.Core.DataInterfaces;
using FashionAde.Core.UserCloset;
using FashionAde.Web.Controllers.MVCInteraction;

namespace FashionAde.Web.Controllers
{
    [HandleError]
    public class RatingController : Controller
    {
        private IFriendRatingInvitationRepository friendRatingInvitationRepository;
        private IClosetOutfitViewRepository closetOutfitViewRepository;
        private IClosetOutfitRepository closetOutfitRepository;
        private IRegisteredUserRepository registeredUserRepository;

        public RatingController(IFriendRatingInvitationRepository friendRatingInvitationRepository, IClosetOutfitViewRepository closetOutfitViewRepository, IClosetOutfitRepository closetOutfitRepository, IRegisteredUserRepository registeredUserRepository)
        {
            this.friendRatingInvitationRepository = friendRatingInvitationRepository;
            this.closetOutfitViewRepository = closetOutfitViewRepository;
            this.closetOutfitRepository = closetOutfitRepository;
            this.registeredUserRepository = registeredUserRepository;
        }

        [AcceptVerbs(HttpVerbs.Get)]
        public ActionResult Index(string id)
        {
            if (IsInt(id))
                return IndexByInt(Convert.ToInt32(id));
            return IndexByGuid(new Guid(id));
        }

        private bool IsInt(string id)
        {
            foreach (char c in id)
                if(!Char.IsNumber(c))
                    return false;
            return true;
        }

        private ActionResult IndexByGuid(Guid id)
        {
            FriendRatingInvitation invitation = friendRatingInvitationRepository.GetByKey(id.ToString());
            invitation.Outfit = closetOutfitViewRepository.GetByClosetOutfitId(invitation.ClosetOutfit.Id);
            if (invitation.FriendRateOn > invitation.InvitationSentOn || invitation.Rate > 0)
            {
                return View("Thanks", invitation);
            }
            ViewData["Key"] = id;

            return View(invitation);
        }

        private ActionResult IndexByInt(int id)
        {
            FriendRatingInvitation invitation = new FriendRatingInvitation();
            invitation.FriendEmail = "Generated by FaceBook";
            invitation.InvitationSentOn = DateTime.Now;
            invitation.FriendRateOn = invitation.InvitationSentOn;
            invitation.KeyCode = Guid.NewGuid().ToString();
            invitation.Message = "Generated by FaceBook";
            invitation.ClosetOutfit = closetOutfitRepository.Get(id);
            invitation.User = invitation.ClosetOutfit.Closet.User;
            friendRatingInvitationRepository.SaveOrUpdate(invitation);

            invitation.Outfit = closetOutfitViewRepository.GetByClosetOutfitId(id);
            
            ViewData["Key"] = invitation.KeyCode;

            return View(invitation);
        }

        [AcceptVerbs(HttpVerbs.Post)]
        public ActionResult Index(int friendsrating, string Comments, Guid Key)
        {
            FriendRatingInvitation invitation = friendRatingInvitationRepository.GetByKey(Key.ToString());
            invitation.Rate = friendsrating;
            invitation.FriendRateOn = DateTime.Now;
            invitation.Message = "";
            if (!string.IsNullOrEmpty(Comments))
                invitation.Message = Comments;

            ClosetOutfit closetOutfit = invitation.ClosetOutfit;
            if (closetOutfit.Rating == null)
                closetOutfit.Rating = new Rating();
            closetOutfit.Rating.Rate(friendsrating, invitation);
            friendRatingInvitationRepository.SaveOrUpdate(invitation);
            closetOutfitRepository.SaveOrUpdate(closetOutfit);

            return View("Thanks", invitation);
        }

        [AcceptVerbs(HttpVerbs.Get)]
        public ActionResult Thanks(FriendRatingInvitation invitation)
        {
            return View(invitation);
        }
        
    }
}
